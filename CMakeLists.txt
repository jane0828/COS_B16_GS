CMAKE_MINIMUM_REQUIRED( VERSION 3.0.0 )
CMAKE_POLICY(SET CMP0072 OLD)

PROJECT(MIMAN)

SET(CMAKE_VERBOSE_MAKEFILE TRUE)
# SET( CMAKE_C_FLAGS_DEBUG "-DDEBUG -DC_FLAGS" )
# SET( CMAKE_EE_LINKER_FLAGS_DEBUG "-DDEBUG -DLINKER_FLAGS" )

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ./cmake)

SET(GLFW_BUILD_DOCS OFF CACHE BOOL "" FORCE)
SET(GLFW_BUILD_TESTS OFF CACHE BOOL "" FORCE)
SET(GLFW_BUILD_EXAMPLES OFF CACHE BOOL "" FORCE)
SET(OPENGL_GL_PREFERENCE LEGACY)
SET(CMAKE_CXX_STANDARD 17)

# add_compile_options("$<$<C_COMPILER_ID:MSVC>:/utf-8>")
# add_compile_options("$<$<CXX_COMPILER_ID:MSVC>:/utf-8>")

FIND_PACKAGE(Threads REQUIRED)
INCLUDE_DIRECTORIES( ${THREADS_INCLUDE_DIRS} )
LINK_LIBRARIES( Threads::Threads )

FIND_PACKAGE(CURL REQUIRED)
INCLUDE_DIRECTORIES(${CURL_INCLUDE_DIRS})
LINK_LIBRARIES(${CURL_LIBRARIES})

FIND_PACKAGE(glfw3 REQUIRED)
INCLUDE_DIRECTORIES( ${glfw3_INCLUDE_DIRS} )
LINK_LIBRARIES(glfw)

FIND_PACKAGE(OpenGL REQUIRED)
INCLUDE_DIRECTORIES( ${OpenGL_INCLUDE_DIRS} )
LINK_LIBRARIES(${OpenGL_LIBRARIES})

FIND_PACKAGE(GLEW REQUIRED)
INCLUDE_DIRECTORIES( ${GLEW_INCLUDE_DIRS} )
LINK_LIBRARIES(${GLEW_LIBRARIES})

FIND_PACKAGE(GLUT REQUIRED)
INCLUDE_DIRECTORIES( ${GLUT_INCLUDE_DIRS} )
LINK_LIBRARIES(${GLUT_LIBRARIES})

FIND_PACKAGE(glbinding REQUIRED)
INCLUDE_DIRECTORIES( ${glbinding_INCLUDE_DIRS} )
LINK_LIBRARIES(${glbinding_LIBRARIES})

#FIND_PACKAGE(Freetype2 REQUIRED)
#INCLUDE_DIRECTORIES( ${Freetype2_INCLUDE_DIRS} )
#LINK_LIBRARIES(${Freetype2_LIBRARIES})

#FIND_PACKAGE(SSH REQUIRED)
#INCLUDE_DIRECTORIES( ${SSH_INCLUDE_DIRS} )
#LINK_LIBRARIES(${SSH_LIBRARIES})


SET(MIMAN_BIN ${CMAKE_CURRENT_SOURCE_DIR}/bin)
SET(MIMAN_SRC ${CMAKE_CURRENT_SOURCE_DIR}/src)
SET(MIMAN_LIB ${CMAKE_CURRENT_SOURCE_DIR}/lib)


INCLUDE_DIRECTORIES (/usr/local/include)
INCLUDE_DIRECTORIES (/usr/include)

INCLUDE_DIRECTORIES (${CMAKE_CURRENT_SOURCE_DIR}/config)
INCLUDE_DIRECTORIES (${MIMAN_LIB})
INCLUDE_DIRECTORIES (${MIMAN_LIB}/libsgp4)
INCLUDE_DIRECTORIES (${MIMAN_LIB}/imgui)
INCLUDE_DIRECTORIES (${MIMAN_LIB}/gscsp/build)
INCLUDE_DIRECTORIES (${MIMAN_LIB}/gscsp/lib/libparam_client/include)
INCLUDE_DIRECTORIES (${MIMAN_LIB}/gscsp/lib/libutil/include)
INCLUDE_DIRECTORIES (${MIMAN_LIB}/gscsp/lib/libgscsp/include)
INCLUDE_DIRECTORIES (${MIMAN_LIB}/gscsp/lib/libgscsp/lib/libcsp/include)
INCLUDE_DIRECTORIES (${MIMAN_LIB}/gscsp/lib/libgscsp/lib/libcsp/src)
INCLUDE_DIRECTORIES (${MIMAN_LIB}/gscsp/build/lib/libgscsp/lib/libcsp/include)
INCLUDE_DIRECTORIES (${MIMAN_LIB}/gscsp/lib/libfp_client/include)
INCLUDE_DIRECTORIES (${MIMAN_LIB}/gscsp/lib/libftp_client/include)
INCLUDE_DIRECTORIES (${MIMAN_LIB}/gscsp/lib/libgosh_client/include)
INCLUDE_DIRECTORIES (${MIMAN_SRC})

ADD_EXECUTABLE(MIMAN ${MIMAN_SRC}/miman_config.cpp ${MIMAN_SRC}/miman_coms.cpp ${MIMAN_SRC}/miman_csp.cpp ${MIMAN_SRC}/miman_ftpfcd.cpp ${MIMAN_SRC}/miman_ftprdp.cpp ${MIMAN_SRC}/miman_imgui.cpp ${MIMAN_SRC}/miman_orbital.cpp ${MIMAN_SRC}/miman_radial.cpp ${MIMAN_SRC}/miman_model.cpp ${MIMAN_SRC}/miman_s_control.cpp ${MIMAN_SRC}/miman_autopilot.cpp ${MIMAN_SRC}/main.cpp)

# TARGET_LINK_LIBRARIES(MIMAN curl pthread GL GLEW glut glbinding libssh)
TARGET_LINK_LIBRARIES(MIMAN curl pthread GL GLEW glut glbinding ssh)

TARGET_LINK_LIBRARIES(MIMAN ${MIMAN_LIB}/libsgp4/libsgp4.a)
TARGET_LINK_LIBRARIES(MIMAN ${MIMAN_LIB}/imgui/libimgui.a)
TARGET_LINK_LIBRARIES(MIMAN ${MIMAN_LIB}/gscsp/build/libmimancsp.a)
